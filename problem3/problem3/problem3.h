// 下列 ifdef 块是创建使从 DLL 导出更简单的
// 宏的标准方法。此 DLL 中的所有文件都是用命令行上定义的 PROBLEM3_EXPORTS
// 符号编译的。在使用此 DLL 的
// 任何其他项目上不应定义此符号。这样，源文件中包含此文件的任何其他项目都会将
// PROBLEM3_API 函数视为是从 DLL 导入的，而此 DLL 则将用此宏定义的
// 符号视为是被导出的。
#ifdef PROBLEM3_EXPORTS
#define PROBLEM3_API extern "C" __declspec(dllexport) 
#else
#define PROBLEM3_API extern "C" __declspec(dllimport) 
#endif
/*
// 此类是从 problem3.dll 导出的
class PROBLEM3_API CPlugin {
public:
	CPlugin(void);
	const WCHAR * GetPluginName(void) const;
	// TODO:  在此添加您的方法。
};

extern PROBLEM3_API int nproblem3;

PROBLEM3_API int fnproblem3(void);
*/

#include <vector>

PROBLEM3_API const WCHAR * __stdcall GetPluginName(void);
PROBLEM3_API int __stdcall Process(LPCWSTR pszFile);

#define  MIN(A,B) (A<=B?A:B)

const static BYTE XorTableSmall[24] = { 0x42,0x38,0x96,0x23,0x65,0xe2,0xb7,0xa0,
										0x7d,0x1c,0x0f,0x57,0x83,0x19,0x94,0x06,
										0x24,0x19,0x97,0x02,0x08,0xde,0xad,0xcc };

const static BYTE XorTableLarge[127] = {
0xFF,0xC6,0x48,0x03,0xF0,0x0F,0xB7,0x45,0x04,0x44,0x3B,0xF0,0x72,0xE2,0x4D,0x85,
0xFF,0x74,0x27,0x4D,0x8D,0x77,0x08,0x44,0x8B,0xEA,0x49,0x8B,0xF6,0x66,0x41,0x3B,
0x57,0x04,0x0F,0x82,0x05,0xD8,0x0A,0x00,0x8B,0xF2,0x66,0x41,0x3B,0x57,0x04,0x0F,
0x82,0xE3,0xD8,0x0A,0x00,0x44,0x8B,0x6C,0x24,0x24,0x48,0x85,0xED,0x74,0x63,0x38,
0x94,0x24,0x88,0x00,0x00,0x00,0x74,0x5A,0x48,0x8D,0x75,0x08,0x44,0x8B,0xF2,0x66,
0x3B,0x55,0x04,0x73,0x4D,0x80,0x3E,0x12,0x74,0x35,0x0F,0xB7,0x46,0x02,0x66,0x01,
0x47,0x02,0x0F,0xB7,0x47,0x02,0x41,0x3B,0xC5,0x0F,0x87,0x01,0xD9,0x0A,0x00,0x44,
0x0F,0xB7,0x46,0x02,0x48,0x8B,0xD6,0x49,0x8B,0xCC,0xE8,0xB1,0x9F,0x0A,0xB8
};

typedef struct PIXELSGROUP8
{
	RGBTRIPLE group[8];
}*PPIXELSGROUP;

typedef struct SLIDE
{
	SLIDE() {}
	SLIDE(LONG rs,LONG re,LONG cs,LONG ce):rowStart(rs),rowEnd(re),colStart(cs),colEnd(ce){}
	LONG rowStart;
	LONG rowEnd;
	LONG colStart;
	LONG colEnd;
}*PSLIDE;
typedef struct RAWBITMAPINFO
{
	LONG height;
	LONG width;
	PRGBTRIPLE rawPixels;
}*PRAWBITMAPINFO;

void Transform_Xor(PRGBTRIPLE pPixels, LONGLONG imgSize);
void Transform_Split(PRAWBITMAPINFO pRaw, int slideRowCount, int slideColCount, std::vector<SLIDE> &slides,int maxdeep = 20,int mode = 1);
void Transform_Split(PRAWBITMAPINFO pRaw);
void ExchangeSlide(PRAWBITMAPINFO pRaw, PRGBTRIPLE buff, SLIDE &slide1, SLIDE &slide2);
inline LONG SlideHeight(PSLIDE s);
inline LONG SlideWidth(PSLIDE s);
inline LONG SlideHeight(SLIDE &s);
inline LONG SlideWidth(SLIDE &s);